{"version":3,"sources":["Crypto.js","App.js","index.js"],"names":["Crypto","name","image","symbol","price","volume","priceChange","marketcap","className","src","alt","toLocaleString","toFixed","App","useState","crypto","setcryptos","search","setSearch","useEffect","axios","get","then","res","data","catch","error","console","log","filteredCoins","filter","toLowerCase","includes","type","placeholder","onChange","e","target","value","map","current_price","total_volume","market_cap","price_change_percentage_24h","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQA6BeA,EA1BA,SAAC,GAAkE,IAAjEC,EAAgE,EAAhEA,KAAMC,EAA0D,EAA1DA,MAAOC,EAAmD,EAAnDA,OAAQC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,UAC9D,OACI,qBAAKC,UAAU,mBAAf,SACI,sBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,SAAf,UACI,qBAAKC,IAAKP,EAAOQ,IAAI,WACrB,6BAAKT,IACL,mBAAGO,UAAU,gBAAb,SAA8BL,OAGlC,sBAAKK,UAAU,cAAf,UACA,oBAAGA,UAAU,eAAb,cAA8BJ,KAC9B,oBAAGI,UAAU,gBAAb,cAA+BH,EAAOM,oBACrCL,EAAc,EACX,oBAAGE,UAAU,wBAAb,UAAsCF,EAAYM,QAAQ,GAA1D,OAEA,oBAAGJ,UAAU,uBAAb,UAAqCF,EAAYM,QAAQ,GAAzD,OAEJ,oBAAGJ,UAAU,mBAAb,wBAA4CD,EAAUI,6BCwCvDE,MArDf,WACE,MAA6BC,mBAAS,IAAtC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACAC,qBAAU,WACRC,IAAMC,IAAI,4HACTC,MAAK,SAAAC,GACJP,EAAWO,EAAIC,SAGhBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAE3B,IACH,IAGMG,EAAgBd,EAAOe,QAAO,SAAAf,GAAM,OACxCA,EAAOd,KAAK8B,cAAcC,SAASf,EAAOc,kBAO5C,OACE,sBAAKvB,UAAU,aAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,cAAd,gCACA,+BACA,uBAAOyB,KAAK,OAAOC,YAAY,cAAe1B,UAAU,eAAe2B,SAhBxD,SAAAC,GACnBlB,EAAUkB,EAAEC,OAAOC,eAmBhBT,EAAcU,KAAI,SAAAxB,GACjB,OACE,cAAC,EAAD,CAECd,KAAMc,EAAOd,KACbG,MAAOW,EAAOyB,cACdrC,OAAQY,EAAOZ,OACfI,UAAWQ,EAAO0B,aAClBpC,OAAQU,EAAO2B,WACfxC,MAAOa,EAAOb,MACdI,YAAaS,EAAO4B,6BAPf5B,EAAO6B,WCvCvBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d0ce6dde.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Crypto.css';\r\n\r\nconst Crypto = ({name, image, symbol, price, volume, priceChange, marketcap}) => {\r\n    return (\r\n        <div className=\"crypto-container\">\r\n            <div className=\"crypto-row\">\r\n                <div className=\"crypto\">\r\n                    <img src={image} alt=\"crypto\"/>\r\n                    <h1>{name}</h1>\r\n                    <p className=\"crypto-symbol\">{symbol}</p>\r\n                    \r\n                </div>\r\n                <div className=\"crypto-data\">\r\n                <p className=\"crypto-price\">${price}</p>\r\n                <p className=\"crypto-volume\">${volume.toLocaleString()}</p>\r\n                {priceChange < 0 ? (\r\n                    <p className=\"crypto-percentage red\">{priceChange.toFixed(2)}%</p>\r\n                ) : (\r\n                    <p className='crypto-percent green'>{priceChange.toFixed(2)}%</p>\r\n                )}\r\n                <p className='crypto-marketcap'> Mkt Cap: ${marketcap.toLocaleString()}</p>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Crypto;\r\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Crypto from './Crypto';\n\n\n\n\nfunction App() {\n  const [crypto, setcryptos] = useState([]);\n  const [search, setSearch] = useState('')\n  useEffect(() => {\n    axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false')\n    .then(res => {\n      setcryptos(res.data);\n      \n    })\n    .catch(error => console.log(error));\n\n  }, []);\n  const handleChange = e => {\n    setSearch(e.target.value);\n  };\n  const filteredCoins = crypto.filter(crypto => \n    crypto.name.toLowerCase().includes(search.toLowerCase())\n  );\n\n\n\n\n\n  return (\n    <div className=\"crypto-app\">\n      <div className=\"crypto-search\">\n        <h1 className=\"crypto-text\">Search Crypto Coin</h1>\n        <form>\n        <input type=\"text\" placeholder=\"Search Coin\"  className=\"crypto-input\" onChange={handleChange}/>\n        </form>\n\n      </div>\n      {filteredCoins.map(crypto => {\n        return (\n          <Crypto\n           key={crypto.id}\n           name={crypto.name}\n           price={crypto.current_price}\n           symbol={crypto.symbol}\n           marketcap={crypto.total_volume}\n           volume={crypto.market_cap}\n           image={crypto.image}\n           priceChange={crypto.price_change_percentage_24h}/>\n           \n        );\n      })}\n      \n    </div>\n    \n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}